/*----------------------------------------------------------------------------------------------------------------------
Klavyeden alınan int türden üç sayı arasındaki büyüklük-küçüklük ilişkisini küçükten büyüğe doğru < ve =
sembolleriyle gösteren programı yazınız:
---------------------------------------------------------------------------------------------------------------------------*/

package csd;

class App {
	public static void main(String [] args)	
	{			
		SortTheNumbersTest.run(); 
	}
}
class SortTheNumbersTest {
	public static void run ()
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		System.out.println("3 Sayı Giriniz: ");
		int a = kb.nextInt();
		int b = kb.nextInt();
		int c = kb.nextInt();
		
		NumberUtil.sortTheNumber(a, b, c);
	}
}
class NumberUtil {
	public static void sortTheNumber(int a, int b, int c)
	{
	if (a < b && b < c)
		System.out.printf("%d < %d < %d%n", a, b, c);
	else if ( b < c && c < a)
		System.out.printf("%d < %d < %d%n", b, c, a);
		
	else if ( a == b && b < c)
		System.out.printf("%d = %d < %d%n ", a, b, c);
		
	else 
		System.out.printf("%d < %d = %d%n", a, b, c);
		
	}
}
/*----------------------------------------------------------------------------------------------------------------------
Parametresi ile aldığı int türden 3 sayıdan ortancasına geri dönen mid isimli metodu NumberUtil isimli sınıf
içerisinde yazınız ve test ediniz. Metot sayıların aynı olması durumunda da ortanca değere geri dönecektir.
Örneğin sayılar 10, 10, 20 ise ortanca değer 10 olacaktır.

Açıklama: Üç tane sayının ortancası sayıların toplamından sayıların en küçüğünün ve en büyüğünün toplamını
çıkartmakla bulunabilir. Metot bu şekilde yazılmayacaktır. Yani metot içerisinde sayıların en büyüğünün ve en
küçüğünün bulunmasına gerek yoktur.

---------------------------------------------------------------------------------------------------------------------------*/

package csd;

class App {
	public static void main(String [] args)	
	{			
		NumberUtilTest.run(); 
	}
}
class NumberUtilTest {
	public static void run ()
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		System.out.println("3 Sayı Giriniz: ");
		int a = kb.nextInt();
		int b = kb.nextInt();
		int c = kb.nextInt();
		
		int median = NumberUtil.mid(a, b, c);
		System.out.println("Ortanca: " + median);
	}
}
class NumberUtil {
	public static int mid(int a, int b, int c)
	{
	if (a <= b & b < c)
		return b;
	else if ( b <= a & a < c)
		return a;
		
	else if ( b <= c & c < a)
		return c;
	
	return c;
		
   	}
}

/*----------------------------------------------------------------------------------------------------------------------
Parametresi ile aldığı int türden bir sayının negatif mi, 0(sıfır) mı, pozitif mi olduğunu test eden signum isimli
metodu yazınız ve test ediniz. Metot pozitif için 1(bir), negatif için -1(eksi bir) ve sıfır için 0(sıfır) döndürecektir.
Açıklama: Math sınıfının signum metodu kullanılmayacaktır.

---------------------------------------------------------------------------------------------------------------------------*/

package csd;

class App {
	public static void main(String [] args)	
	{			
		SignumNumberTest.run(); 
	}
}
class SignumNumberTest {
	public static void run ()
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		System.out.println("Bir Sayı Giriniz: ");
		int a = kb.nextInt();
		
		System.out.println(NumberUtil.signum(a));
	}
}
class NumberUtil {
	public static int signum(int a)
	{
	if (a < 0)
		return -1;
	else if ( a > 0)
		return 1;
	
	return 0;	
	}
}